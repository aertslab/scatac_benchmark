singularity {
   cacheDir = '/staging/leuven/res_00001/software/vsn_containers/'
   enabled = true
   autoMounts = true
   runOptions = '--cleanenv -H $PWD -B /lustre1,/staging,/data,${VSC_SCRATCH},${VSC_SCRATCH}/tmp:/tmp'
}

manifest {
   name = 'vib-singlecell-nf/vsn-pipelines'
   description = 'A repository of pipelines for single-cell data in Nextflow DSL2'
   homePage = 'https://github.com/vib-singlecell-nf/vsn-pipelines'
   version = '0.25.0'
   mainScript = 'main.nf'
   defaultBranch = 'master'
   nextflowVersion = '!>=20.10.0'
}

params {
   global {
      project_name = 'CNAG_10x_RNA'
      outdir = 'out'
      species = 'human'
      seed = 250
      genome {
         assembly = 'hg38'
      }
   }
   misc {
      test {
         enabled = false
      }
   }
   utils {
      container = 'vibsinglecellnf/utils:0.4.0'
      publish {
         compressionLevel = 6
         annotateWithBatchVariableName = false
         mode = 'copy'
      }
   }
   sc {
      file_converter {
         off = 'h5ad'
         tagCellWithSampleId = true
         remove10xGEMWell = false
         useFilteredMatrix = true
         makeVarIndexUnique = false
      }
      file_concatenator {
         join = 'outer'
         off = 'h5ad'
      }
      scanpy {
         container = 'vibsinglecellnf/scanpy:0.5.2'
         report {
            annotations_to_plot = []
         }
         feature_selection {
            report_ipynb = '/src/scanpy/bin/reports/sc_select_variable_genes_report.ipynb'
            method = 'mean_disp_plot'
            minMean = 0.0125
            maxMean = 3
            minDisp = 0.5
            off = 'h5ad'
         }
         feature_scaling {
            method = 'zscore_scale'
            maxSD = 10
            off = 'h5ad'
         }
         neighborhood_graph {
            //nPcs = 50
            off = 'h5ad'
         }
         dim_reduction {
            report_ipynb = '/src/scanpy/bin/reports/sc_dim_reduction_report.ipynb'
            pca {
               method = 'pca'
               //nComps = 50
               off = 'h5ad'
            }
            umap {
               method = 'umap'
               off = 'h5ad'
            }
            tsne {
               method = 'tsne'
               off = 'h5ad'
            }
         }
         clustering {
            preflight_checks = true
            report_ipynb = '/src/scanpy/bin/reports/sc_clustering_report.ipynb'
            method = 'leiden'
            resolutions = [0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0]
            off = 'h5ad'
         }
         marker_genes {
            method = 'wilcoxon'
            ngenes = 0
            groupby = 'louvain'
            off = 'h5ad'
         }
         filter {
            report_ipynb = '/src/scanpy/bin/reports/sc_filter_qc_report.ipynb'
            cellFilterStrategy = 'fixedthresholds'
            cellFilterMinNCounts = 2000
            cellFilterMinNGenes = 200
            cellFilterMaxNGenes = [
                'PBMCmix_1': 5500,
                'PBMCmix_2': 5000,
                'PBMCmix_3': 3500,
                ]
            cellFilterMaxPercentMito = [
                'PBMCmix_1': 0.20,
                'PBMCmix_2': 0.18,
                'PBMCmix_3': 0.20,
                ]
            geneFilterMinNCells = 3
            off = 'h5ad'
            outdir = 'out'
         }
         data_transformation {
            method = 'log1p'
            off = 'h5ad'
         }
         normalization {
            method = 'cpx'
            countsPerCellAfter = 10000
            off = 'h5ad'
         }
      }
      harmony {
         container = 'vibsinglecellnf/harmony:1.0-1'
         report_ipynb = '/src/harmony/bin/reports/sc_harmony_report.ipynb'
         varsUse = ['batch']
      }
      scope {
         genome = ''
         tree {
            level_1 = 'scATAC-seq_Benchmark'
            level_2 = 'RNA'
            level_3 = ''
         }
      }
      cell_annotate {
          off = 'h5ad'
          method = 'aio'
          cellMetaDataFilePath = '/staging/leuven/stg_00002/lcb/cflerin/analysis/pbmc_atac/analysis2/scRNA/cell_type_classification/seruat/CNAG_RNA_cell_type_seurat.txt'
          sampleSuffixWithExtension = ''
          indexColumnName = 'composite_sample_id' //'barcode'
          sampleColumnName = 'sample_id'
          annotationColumnNames = ['cell_type','cell_type_pred_score','cell_type_hiconf_70']
      }
      //sample_annotate {
      //   off = 'h5ad'
      //   by {
      //      metadataFilePath = 'data/10x/1k_pbmc/metadata.tsv'
      //      method = 'sample'
      //      sampleColumnName = 'sample_id'
      //      compIndexColumnNames = [<adataIndexColumnName>:'<metadataIndexColumnName>']
      //      annotationColumnNames = []
      //   }
      //}
      //cell_annotate {
      //   off = 'h5ad'
      //   method = 'obo'
      //   indexColumnName = ''
      //}
   }
   data {
      tenx {
         cellranger_mex = '/staging/leuven/stg_00002/lcb/lcb_projects/BAP/data_unsorted/scRNA/SCGRES_13/cellranger/*/outs'
      }
   }
   pcacv {
      container = 'vibsinglecellnf/pcacv:0.2.0'
      find_optimal_npcs {
         accessor = '@assays$RNA@scale.data'
      }
   }
}

process {
   executor = 'local'
   withLabel:'compute_resources__.*|compute_resources__default' {
      cpus = 2
      memory = '60 GB'
      time = '1h'
      clusterOptions = '-A cluster_account'
   }
   withLabel:compute_resources__minimal {
      cpus = 1
      memory = '1 GB'
   }
   withLabel:compute_resources__mem {
      cpus = 4
      memory = '160 GB'
   }
   withLabel:compute_resources__cpu {
      cpus = 20
      memory = '80 GB'
   }
   withLabel:compute_resources__report {
      maxForks = 2
      cpus = 1
      memory = '160 GB'
   }
   withLabel:compute_resources__24hqueue {
      time = '24h'
   }
   withLabel:compute_resources__pcacv {
      cpus = 1
      time = '24h'
   }
}

timeline {
   enabled = true
   file = 'out/nextflow_reports/execution_timeline.html'
}

report {
   enabled = true
   file = 'out/nextflow_reports/execution_report.html'
}

trace {
   enabled = true
   file = 'out/nextflow_reports/execution_trace.txt'
}

dag {
   enabled = true
   file = 'out/nextflow_reports/pipeline_dag.svg'
}

min {
   enabled = false
}
